#!/usr/bin/php
<?php

    class Kinaf{
        
        private $argc,$argv,$pdo;
        
        public function __construct($argc,$argv){
            $this->argc = $argc;
            $this->argv = $argv;
            if($argc==1){
                $this->rtfm();
            } elseif(method_exists($this,$argv[1])){
				$args = array_slice($argv,2); //removes program name & function
                call_user_func_array(array($this,$argv[1]),$args);
            } else {
                $this->rtfm("Option ".$argv[1]." inconnue");
            }
        }
        
        private function init(){
            
            $parent_dir = __dir__."/../../";
            
            if(is_writable($parent_dir)){
                
                mkdir($parent_dir."routing");
                copy(__dir__.'/base_file/home.yaml',$parent_dir.'/routing/home.yaml');
                    
                mkdir($parent_dir."orm");
                mkdir($parent_dir."plugins");
                
                mkdir($parent_dir."views");
                mkdir($parent_dir."views/home/");
                copy(__dir__.'/base_file/index.html',$parent_dir.'/views/home/index.html');
                
                
                mkdir($parent_dir."namespace");
                mkdir($parent_dir."namespace/controllers");
                mkdir($parent_dir."namespace/entities");
                copy(__dir__.'/base_file/home.class.php',$parent_dir.'/namespace/controllers/home.class.php');
                
                mkdir($parent_dir."configuration");
                copy(__dir__.'/base_file/configuration.yaml',$parent_dir.'/configuration/configuration.yaml');
                
                mkdir($parent_dir."public");
                copy(__dir__.'/base_file/index.php',$parent_dir.'/public/index.php');
                copy(__dir__.'/base_file/.htaccess',$parent_dir.'/public/.htaccess');
                
                
                mkdir($parent_dir."layout");
                mkdir($parent_dir."layout/default");
                copy(__dir__.'/base_file/base.html',$parent_dir.'/layout/default/base.html');
                            
            }
            
            $this->info("Please change the default value in /configuration/configuration.php");
            $this->succes("Project initialized !");
            
        }
        
        private function createPlugin($name){
			
			 $parent_dir = __dir__.'/../../';
			 $plugin_dir = $parent_dir.'plugins/'.$name;
			 
			 $dirs = array('views','namespace','namespace/controllers','namespace/entities','routing','orm','layout','public');
			 
			 if(!is_dir($plugin_dir)){
			 
				mkdir($plugin_dir);
				
				foreach($dirs as $dir){
					mkdir($plugin_dir.'/'.$dir);
				}
			 
			 } else {
				
				$this->error("The plugin ".$name." allready exists");
				
			 }
			
		}
		
		private function publishPlugin($name){
		
			$parent_dir = __dir__.'/../../';
			$plugin_dir = $parent_dir.'plugins/'.$name;
		
			if(is_dir($plugin_dir)){
				
				if(is_dir($plugin_dir.'/public')){
				
					/* check if we need to create the dest dir */
					
					if(!is_dir($parent_dir.'public/plugins/'.$name)){
						mkdir($parent_dir.'public/plugins/'.$name);
					}
					
					/* copy the content over there */
					
					exec('cp -Rf '.realpath($plugin_dir.'/public').' '.realpath($parent_dir.'public/plugins/'.$name));
					
				
				}
				
			} else {
			
				$this->error('The plugin '.$name.' does not exist');
			
			}
		
			
		}
		
		
        
        private function rtfm($err = ''){
            if(!empty($err)){
                echo $err."\n";
            }
            $readme = file_get_contents(__dir__."/scripts/readme");
            echo $readme;
        }
        
        private function error($msg){
            echo $msg."\n";
        }
        
        private function info($msg){
            echo $msg."\n";
        }
        
        private function succes($msg){
            echo $msg."\n";
        }
    }
    
    $k = new Kinaf($argc,$argv);
    
?>
